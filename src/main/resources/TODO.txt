
* "execute query" functionality (de verificat reliability si end-to-end)
* implement nice default infiniquery.ajaxRequestCallback()
* cleanup the code from any usage of possibleValues and possibleValuesSource CDATA #IMPLIED
* make root url of the controller configurable in UI
* fix results limit 
* ensure support for dateTime attributes is complete
	- switch to reflection and remove compile time dependency to joda
    - fix calendar widget remaining orphan after pressing enter in the editable box
    - check if support for dates and datetime is matched between server and UI in all cases
* implement right-click support functionalities
    - select different operator
* document the mapping from java types (of attributes) to user input controls, based on operator type
* generate javadoc
* write developer guide
__________________________
Statement
	Infiniquery empowers Java enterprise application developers to build flexible, powerful and intuitive search screens, that grant unlimited possibilities to the end user.
Download
	Last version (core (binary, src, javadoc), web (binary, src, javadoc), UI (developer ver., minified), examples (src, executable (embedded tomcat), war))
	..............
Quick Start
	what is (a Java-web framework that allows easy creation of data filtering interfaces that offer unlimited capabilities to end users).
	video presentation
	end user guide
	developer guide
Documentation
	quick start guide
	developer guide
		explaining the individual pieces
		interoperability, extensibility and portability concerns
			- integration with joda time without carrying a compile or runtime dependency to this library ;-)
		security concerns
			- no possibility to retrieve jpql dimension (or informations about entity and attribute names) from the UI
			- security access rights based on user roles.
			- build on top of JPA - which drastically minimizes the risks of SQL injection.
	API docs
FAQ
	why is it done in 3 pieces
	what are the 3rd party dependencies? R: depends on Java 7 or later. The UI depends on DateTime Calendar (a lightweight date time picker which doesn't bring extra-dependencies). The web depends on the Springframework (Springboot and a few other from the stack), but the web only consists of a REST controller endpoint (you can easily rewrite it if you want to depend on anything else and not Spring, or to get read of Spring boot and go on with an older version of Spring MVC). 
	Why doesn't it make use of jquery (or other well-known frameworks) behind the scenes (afterall, everybody else does that these days...)? R: The more dependent a framework is to other technologies, the more likely it is to cause interoperability issues in the future, in the case of an upgrade, if any of those dependencies make a backward compatibility violation at some point. Unfortunately, many technologies violate backward compatibility (at least from time to time), especially in the open-source world - and we cannot control what other technologies decide to do. Trying to make it work in the same system with different versions of other frameworks (that may be used for other purposes as well) usually angrenates an entire chain of transitive dependencies. In the case of an upgrade necessity, in a complex enterprise application, this entire chanin needs to be affected and (even a small) backward compatibility issue may cause the impossibility to do the upgrade. For this purpose, I did a lot of efforts to avoid 3rd party dependencies, as much as possible, so that you can use infiniquery in any web page and with any Java backend, without limiting your application to specific versions of specific frameworks once you've introduced infiniquery. If, at any point in the future, there will be a backward compatibility violation in another framework that happens to be used in your application, your infiniquery use will not be affected because infiniquery does not depend on that framework. Because 3rd party dependencies are kept at a very minimum (and will be so also in the future), the memory stamp of this framework is also pretty small (see how small is the total size of the binaries needed to run infiniquery in your application). Compatibility with old browsers is also easier to maintain when there are no 3rd party dependencies in your code.
Author
	abstract
	LinkedIn, GitHub, Youtube, E-mail

______________________________
Chief Architect
Web Designer
Java Developer
UI Developer
QA Engineer
Infrastructure
Promoter
Creator
Improbable Things Maker
_______________
InfiniQuery (tips for the website)

Bring usability to the extreme!
Make your user's dream come true!

Grant your non-specialist end-user unlimited power without added complexity.

Search queries of extreme power and flexibility, build with a few clicks.
Fully intuitive fluent user interface.
Possibility to cache and save built queries for later use, scheduling etc.

No user manual required for end-users. Easy to follow manual for developers.
Extreme intuitivity. Extreme creativity.


Fully interoperable in web sites and web applications built on the Java platform.
Fully free (for both commercial and non-commercial use).
Fully open source under Free BSD - 2 Clause license (use it in any way you want, as long as you keep the copyright notice within the code).

_______
statistics

Browser compatibility:

total lines of code
lines of code on the front end
lines of code on the back end
__________________
known issues and limitations
- no scroll in the autocomplete dropdown for picking entities, attributes or keywords
- no horizontal scroll in the autocomplete dropdown for picking entities, attributes or keywords
- all dropdowns are displayed below the targeted query element. If the targeted query element is down in the page, the dropdown may overpass the low margin.
- no possibility to edit a query, once built. No possibility to undo any action during the query build process (targeted for fixing in the next versions; temporary solution: reload and redo the entire query)
-

What's new in v1.0.1
- added automatic scroll capabilities in dropdown for picking entity names and attribute names and maximum dimensions the dropdown can take (whenever the max dimensions are overpassed by the dropdown's content, the scrolls will show in place).

What's new in v1.1.0
- added right-click support for editing various aspects of a query. No need to reload the page and redo the entire query, if you did a mistake when building it.
- performance improvements in the UI side; improved reactivity to clicks especially for low resources platforms (an average of 8% gain in execution speed)
- improved styling

What's new in v1.1.1
- a second stylesheet provided out-of-the-box, with possibility to switch the style at runtime (an example of how to do it in the front end included)

What's new in v1.1.2
- Various performance improvements on both front and back end
- Improved exception handling